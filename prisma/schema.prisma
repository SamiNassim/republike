generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstname String
  lastname  String
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  likedMessages    Message[] @relation(name: "like")
  dislikedMessages Message[] @relation(name: "dislike")

  messages Message[]
  accounts Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Message {
  id        String   @id @default(cuid())
  userId    String
  content   String   @db.Text
  likes     Int      @default(0)
  dislikes  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  likedByUsers    User[] @relation(name: "like")
  dislikedByUsers User[] @relation(name: "dislike")
}
